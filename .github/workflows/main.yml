name: Build and Push Docker Images

# Triggers the workflow on push or pull request to the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Define environment variables and permissions
env:
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#  NEXT_PUBLIC_AWS_ACCESS_KEY_ID: ${{secrets.NEXT_PUBLIC_AWS_ACCESS_KEY_ID}}
#  NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY: ${{secrets.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY}}
#  NEXT_PUBLIC_AWS_REGION: ${{secrets.NEXT_PUBLIC_AWS_REGION}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin


      # Build the production image
      - name: Build prod image
        id: build_prod
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build --no-cache \
          -t utkarshxf/artly:${IMAGE_TAG} -f Dockerfile .


      # Push production image to Docker Hub
      - name: Push prod image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker push utkarshxf/artly:${IMAGE_TAG}

      # Prune dangling images to free up space
      - name: Prune dangling images
        run: docker image prune -f